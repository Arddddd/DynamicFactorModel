from statsmodels.tsa.statespace import dynamic_factor
import pandas as pd


raw = pd.read_excel(r'cn_raw_data.xlsx', index_col=0)
raw = raw[raw.index <= '2023-06']
for c in raw.columns:
    raw['std_' + c] = (raw[c] - raw[c].mean()) / (raw[c].std())
raw.to_excel(r'std_202306.xlsx')

data = pd.read_excel(r'std_202306.xlsx', index_col=0)
data.index = pd.to_datetime(data.index)
col_growth = ['std_IAV', 'std_CGTRS', 'std_FAIC2']
col_infla = ['std_CPI', 'std_PPI']

for x in [col_growth, col_infla]:
    endog = data[x].resample('M').last()

    dfm_model = dynamic_factor.DynamicFactor(endog=endog, k_factors=1, factor_order=3)
    res = dfm_model.fit()
    for step in [1, 3, 6]:
        # print(mod.summary())
        pred = res.forecast(steps=step)
        update_endog = pd.concat([endog, pred])
        update_model = dynamic_factor.DynamicFactor(endog=update_endog, k_factors=1, factor_order=3)
        update_res = update_model.fit()
        factors = pd.DataFrame(update_res.factors.filtered.T, index=update_endog.index, columns=['pred_' + str(step)])
        factors['std_' + 'pred_' + str(step)] = (factors - factors.mean()) / (factors.std())
        if len(x) == 3:
            factors.to_excel(r'growth_pred_' + str(step) + '.xlsx')
        else:
            factors.to_excel(r'infla_pred_' + str(step) + '.xlsx')
